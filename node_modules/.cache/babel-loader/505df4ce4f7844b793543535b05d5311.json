{"ast":null,"code":"var _jsxFileName = \"/Users/cat/Documents/LAMBDA/React-Github-User-Card/my-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport UserCard from \"./UserCard\";\nimport FollowerCard from \"./FollowerCard\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      followersList: [],\n      searchFollowers: [],\n      searchTerm: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  // Fetching My User on Github\n  componentDidMount() {\n    axios.get(\"https://api.github.com/users/Catherinesjkim\").then(res => {\n      console.log(\"API is Here:\", res.data);\n      this.setState({\n        name: res.data.name,\n        img: res.data.avatar_url,\n        github: res.data.html_url,\n        files: res.data.repos_url,\n        location: res.data.location,\n        repoNum: res.data.public_repos,\n        followed: res.data.following,\n        followers: res.data.followers\n      });\n    }).catch(err => console.log('error on fetch: ', err));\n    axios.get(\"https://api.github.com/users/Catherinesjkim/followers\").then(res => {\n      console.log(\"API is Here:\", res.data);\n      this.setState({\n        searchFollowers: res.data,\n        followersList: res.data\n      });\n    }).catch(err => console.log('error on fetch: ', err));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      console.log(\"SearchTerm: we have state change!\");\n      const follower = this.state.searchFollowers.filter(people => people.login.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\n      this.setState({\n        followersList: follower\n      });\n    }\n  } // handleSubmit = event =>\n  //   event.preventDefault();\n  //   return()\n\n\n  // handleUserTextChange = event => {\n  //   this.setState({ ...this.state, userText: event.target.value });\n  // };\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Github Users:\"), React.createElement(UserCard, {\n      name: this.state.name,\n      img: this.state.img,\n      github: this.state.github,\n      filed: this.state.files,\n      location: this.state.location,\n      repoNum: this.state.repoNum,\n      followed: this.state.followed,\n      followers: this.state.followers,\n      login: this.state.name,\n      url: this.state.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Search Bar\"), React.createElement(\"input\", {\n      name: \"searchTerm\",\n      type: \"text\",\n      value: this.state.searchTerm,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"followersList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.followersList.map(info => {\n      return React.createElement(FollowerCard, {\n        key: info.id,\n        name: info.login,\n        src: info.avatar_url,\n        github: info.html_url,\n        files: info.repos_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cat/Documents/LAMBDA/React-Github-User-Card/my-app/src/App.js"],"names":["React","UserCard","FollowerCard","axios","App","Component","state","followersList","searchFollowers","searchTerm","handleChange","event","setState","target","name","value","componentDidMount","get","then","res","console","log","data","img","avatar_url","github","html_url","files","repos_url","location","repoNum","public_repos","followed","following","followers","catch","err","componentDidUpdate","prevProps","prevState","follower","filter","people","login","toLowerCase","includes","render","url","map","info","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport UserCard from \"./UserCard\";\nimport FollowerCard from \"./FollowerCard\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n      followersList: [],\n      searchFollowers: [],\n      searchTerm: \"\"\n    };\n\n  // Fetching My User on Github\n  componentDidMount() {\n    axios\n      .get(\"https://api.github.com/users/Catherinesjkim\")\n      .then(res => {\n        console.log(\"API is Here:\", res.data); \n        this.setState({\n          name: res.data.name,\n          img: res.data.avatar_url, \n          github: res.data.html_url,\n          files: res.data.repos_url, \n          location: res.data.location, \n          repoNum: res.data.public_repos, \n          followed: res.data.following,\n          followers: res.data.followers,\n        })\n  })\n    .catch(err => console.log('error on fetch: ', err));\n  \n    axios\n      .get(\"https://api.github.com/users/Catherinesjkim/followers\")\n      .then(res => {\n        console.log(\"API is Here:\", res.data);\n    this.setState({\n      searchFollowers: res.data,\n      followersList: res.data,\n    })\n  })\n    .catch (err => console.log('error on fetch: ', err));\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n    console.log(\"SearchTerm: we have state change!\");\n    \n    const follower = this.state.searchFollowers.filter(people =>\n      people.login.toLowerCase().includes(this.state.searchTerm.toLowerCase()),\n    );\n    this.setState({followersList: follower})\n    }\n   }\n\n    // handleSubmit = event =>\n    //   event.preventDefault();\n    //   return()\n\n    handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    };\n    \n    // handleUserTextChange = event => {\n    //   this.setState({ ...this.state, userText: event.target.value });\n    // };\n\n    render() {\n      return (\n        <div className=\"App\">\n          <h1>Github Users:</h1>\n          <UserCard\n            name={this.state.name}\n            img={this.state.img}\n            github={this.state.github}\n            filed={this.state.files}\n            location={this.state.location}\n            repoNum={this.state.repoNum}\n            followed={this.state.followed}\n            followers={this.state.followers}\n            login={this.state.name}\n            url={this.state.url}\n          />\n          <form>\n            <h3>Search Bar</h3>\n            <input \n              name=\"searchTerm\"\n              type=\"text\" \n              value={this.state.searchTerm} \n              onChange={this.handleChange}\n            />\n            {/* <button onClick={this.handleUserFetch}>fetch users</button> */}\n          </form>\n\n          <div className=\"followersList\">\n            {this.state.followersList.map(info => {\n                return <FollowerCard \n                  key={info.id}\n                  name={info.login}\n                  src={info.avatar_url} \n                  github={info.html_url}\n                  files={info.repos_url}\n                  />;\n            })}\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}